services:
  hmem-api:
    image: hmem-api
    build:
      context: .
      dockerfile: HMEM.API/Dockerfile
    container_name: hmem-api-container
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8080:8080"
    depends_on:
      - mongo
    networks:
      - hmem-network
  notification-service:
    build:
      context: .
      dockerfile: HMEM.AlertService/Dockerfile
    container_name: hmem-alert
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - mongo
    networks:
      - hmem-network

  mongo:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - hmem-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - hmem-network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - hmem-network

volumes:
  mongo_data:
networks:
  hmem-network:
